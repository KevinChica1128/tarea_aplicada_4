B1M<-solve(t(Xd)%*%Xd)%*%t(Xd)%*%yd
Betaest
Betaori
B1P<-Betaori
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCRdM
SCRdP
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
R2M
R2P
Betaest<-T%*%alfae
Betaori[1]=Betaest[1]*(sd(y)/sd(x1))
Betaori[2]=Betaest[2]*(sd(y)/sd(x2))
Betaori[3]=Betaest[3]*(sd(y)/sd(x3))
Betaori[4]=Betaest[4]*(sd(y)/sd(x4))
Betaori[5]=Betaest[5]*(sd(y)/sd(x5))
Betaori[6]=Betaest[6]*(sd(y)/sd(x6))
B1M<-solve(t(Xd)%*%Xd)%*%t(Xd)%*%yd
B1P<-Betaori
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCTd<-t(yd)%*%yd
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
R2M
R2P
alfaec<-c(1,1,1,0,0,0)*alfaec
Betaest<-T%*%alfae
Betaori[1]=Betaest[1]*(sd(y)/sd(x1))
Betaori[2]=Betaest[2]*(sd(y)/sd(x2))
Betaori[3]=Betaest[3]*(sd(y)/sd(x3))
Betaori[4]=Betaest[4]*(sd(y)/sd(x4))
Betaori[5]=Betaest[5]*(sd(y)/sd(x5))
Betaori[6]=Betaest[6]*(sd(y)/sd(x6))
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCTd<-t(yd)%*%yd
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
R2M
R2P
B1P<-Betaori
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCTd<-t(yd)%*%yd
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
R2P
R2M<-SCRdM/SCTd
R2M
R2P<-SCRdP/SCTd
R2P
alfaec<-c(1,1,1,0,0,0)*alfae
Betaest<-T%*%alfaec
Betaori<-c()
Betaori[1]=Betaest[1]*(sd(y)/sd(x1))
Betaori[2]=Betaest[2]*(sd(y)/sd(x2))
Betaori[3]=Betaest[3]*(sd(y)/sd(x3))
Betaori[4]=Betaest[4]*(sd(y)/sd(x4))
Betaori[5]=Betaest[5]*(sd(y)/sd(x5))
Betaori[6]=Betaest[6]*(sd(y)/sd(x6))
Beta0ori=mean(y)-(t(Betaori)%*%xbarra)
betas<-c(Beta0ori,Betaori)
B1P<-Betaori
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCTd<-t(yd)%*%yd
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
R2P
R2M
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
funcion2exacta<-function(x){(gamma(14)/(gamma(10)*gamma(4)))*(x^9)*((1-x)^3)*(x^2)}
integrate(funcion,0,1) #Constante de integración
integrate(funcion2exacta,0,1) #Integral de la densidad completa (=1)
Eteorica<-integrate(funcion2exacta,0,1)  #0.7142857
E2teorica<-integrate(funcion2exacta,0,1) #0.5238095
Vteorica<-0.5238095-(0.7142857^2) #Resultado: 0.01360544
teta2<-runif(N) #Funcion de importancia U(0,1)
w1<-funcion(teta2)/dunif(teta2,0,1)
E1<-(1/sum(w1))*(sum(w1*teta2))  #Esperanza estimada  0.7148448
E21<-(1/sum(w1))*(sum(w1*(teta2^2))) #0.5247885
V1<-E21-(E1^2) #Varianza estimada 0.01378547
teta22<-rbeta(N,8.25,2.75) #Función de importancia Beta(8.25,2.75)
w12<-funcion(teta22)/dbeta(teta22,8.25,2.75)
#Muestreo por importancia Ejemplos:
#Ejemplo 1:
N=10000
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
funcion2exacta<-function(x){(gamma(14)/(gamma(10)*gamma(4)))*(x^9)*((1-x)^3)*(x^2)}
integrate(funcion,0,1) #Constante de integración
integrate(funcion2exacta,0,1) #Integral de la densidad completa (=1)
Eteorica<-integrate(funcion2exacta,0,1)  #0.7142857
E2teorica<-integrate(funcion2exacta,0,1) #0.5238095
Vteorica<-0.5238095-(0.7142857^2) #Resultado: 0.01360544
teta2<-runif(N) #Funcion de importancia U(0,1)
w1<-funcion(teta2)/dunif(teta2,0,1)
E1<-(1/sum(w1))*(sum(w1*teta2))  #Esperanza estimada  0.7148448
E21<-(1/sum(w1))*(sum(w1*(teta2^2))) #0.5247885
V1<-E21-(E1^2) #Varianza estimada 0.01378547
teta22<-rbeta(N,8.25,2.75) #Función de importancia Beta(8.25,2.75)
w12<-funcion(teta22)/dbeta(teta22,8.25,2.75)
E12<-(1/sum(w12))*(sum(w12*teta22))  #Esperanza estimada 0.7142896
E212<-(1/sum(w12))*(sum(w12*(teta22^2))) #Varianza estimada 0.5238356
V12<-E212-(E12^2) #0.01362596
#Gráfica comparativa:
x11()
plot(density(teta22),col="chartreuse4",ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori",lty=5,lwd=2)
curve(funcion2exacta,0,1,10000,add=TRUE,lwd=3)
lines(density(teta2),lty=2,lwd=2,col="Red")
legend("topleft",legend=c("Exacta","Uniforme","Beta"),
col=c("Black","Red","chartreuse4"),lty=c(1,2,5))
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
#Muestreo por importancia Ejemplos:
#Ejemplo 1:
N=10000
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
varianza=1/N   #Varianza teorica
theta1<-rt(N,N)  #Tetas generados a partir de la función de importancia t de student
w<-dnorm(theta1,xbarra,sqrt(varianza))/dt(theta1,N) #Pesos
E<-(1/sum(w))*(sum(w*theta1))  #Esperanza estimada  0.01375921
E2<-(1/sum(w))*(sum(w*(theta1^2))) #Esperanza^2 estimada 0.0002915643
V<-E2-(E^2) #Varianza 0.0001022485
#Gráfica comparativa:
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
theta1<-rt(N,2)  #Tetas generados a partir de la función de importancia t de student
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
theta1<-rt(N,2)  #Tetas generados a partir de la función de importancia t de student
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
theta1<-rt(N,100)  #Tetas generados a partir de la función de importancia t de student
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
theta1<-rt(N,N)  #Tetas generados a partir de la función de importancia t de student
x11()
plot(density(theta1),col="red",lty=2,lwd=2,ylab=expression(paste("h(",theta,"|y)"))
,xlab = expression(theta),
main = "Aproximación distribuciones a posteriori")
lines(density(X),lwd=2)
legend("topright",legend=c("Exacta","T-Student"),
col=c("Black","Red"),lty=c(1,2))
xbarra
#Muestreo por importancia Ejemplos:
#Ejemplo 1:
N=10000
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
varianza=1/N   #Varianza teorica
xbarra
varianza
theta1<-rt(N,N)  #Tetas generados a partir de la función de importancia t de student
w<-dnorm(theta1,xbarra,sqrt(varianza))/dt(theta1,N) #Pesos
E<-(1/sum(w))*(sum(w*theta1))  #Esperanza estimada  0.01375921
E2<-(1/sum(w))*(sum(w*(theta1^2))) #Esperanza^2 estimada 0.0002915643
E
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
xbarra
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
xbarra
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
xbarra
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
xbarra
X<-rnorm(N)   #Esto se hizo para tener la media y la varianza teorica
xbarra=mean(X) #Media teorica
xbarra
theta1<-rt(N,N)  #Tetas generados a partir de la función de importancia t de student
w<-dnorm(theta1,xbarra,sqrt(varianza))/dt(theta1,N) #Pesos
E<-(1/sum(w))*(sum(w*theta1))  #Esperanza estimada  0.01375921
E
varianza
E2<-(1/sum(w))*(sum(w*(theta1^2))) #Esperanza^2 estimada 0.0002915643
E2
V<-E2-(E^2) #Varianza 0.0001022485
V
xdtxd<-t(Xd)%*%Xd
xdtxd
xdtyd
R2M
R2P
summary(Regresion)
regCP(X)
library(MASS)
library("readr")
cadata <- read.csv("~/GitHub/tarea_aplicada_4/cadata.txt", sep="")
## El número aleatorio generado fue 15529 ##
# Eliminamos las filas que no necesitamos, nos quedamos con las filas desde la 15529 hasta la 16029 #
cadata<- cadata[-c(1:15528,16029:20640),]
#Ajuste del modelo completo:
Regresion<- lm(cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(Regresion)$sigma^2
#Valors ajustados y residuales del modelo:
yajustados<-fitted(Regresion)
residuales<-residuals(Regresion)
#Matriz de correlaciones:
X = cbind(Ingreso=cadata$Ingreso_mediano,Edad=cadata$Edad_mediana_de_la_vivienda,Habitaciones=cadata$Total_de_habitaciones,
Dormitorios=cadata$Total_de_dormitorios,Poblacion=cadata$Poblacion,Hogares=cadata$Hogares)
R = cor(X)
R
#Factor de inflación de varianza:
library('fmsb')
#Ingreso:
modi<-lm(cadata$Ingreso_mediano ~ cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(modi)
VIF(modi)   #Paquete
Ri2=0.3613       #A mano
VIFi=(1-Ri2)^(-1)
#Edad:
mode<-lm(cadata$Edad_mediana_de_la_vivienda ~ cadata$Ingreso_mediano+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(mode)
VIF(mode)   #Paquete
Re2=0.2136       #A mano
VIFe=(1-Re2)^(-1)
#Habitaciones:
modh<-lm(cadata$Total_de_habitaciones ~ cadata$Edad_mediana_de_la_vivienda+cadata$Ingreso_mediano+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(modh)
VIF(modh)   #Paquete
Rh2=0.8781       #A mano
VIFh=(1-Rh2)^(-1)
#Dormitorios:
modd<-lm(cadata$Total_de_dormitorios ~ cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Ingreso_mediano+cadata$Poblacion+cadata$Hogares)
summary(modd)
VIF(modd)   #Paquete
Rd2=0.9809       #A mano
VIFd=(1-Rd2)^(-1)
#Población:
modp<-lm(cadata$Poblacion ~ cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Ingreso_mediano+cadata$Hogares)
summary(modp)
VIF(modp)   #Paquete
Rp2=0.8238       #A mano
VIFp=(1-Rp2)^(-1)
#Hogares:
modho<-lm(cadata$Hogares ~ cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Ingreso_mediano+cadata$Poblacion)
summary(modho)
VIF(modho)   #Paquete
Rho2=0.9822       #A mano
VIFho=(1-Rho2)^(-1)
#ANALISIS DE VALORES PROPIOS
eigen(R)
k=max(eigen(R)$values)/min(eigen(R)$values)
ki=c(max(eigen(R)$values)/eigen(R)$values)
#Determinante de la matriz de correlaciones:
det(R)
library(pls)
regresion_pcr=pcr(formula=cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+
cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares
)
coef(regresion_pcr, comps = 1:6)
#Método (PCR) paso a paso:
#La matriz X es:
X
#La matriz X* (reescalada) es:
x1<-cadata$Ingreso_mediano
x2<-cadata$Edad_mediana_de_la_vivienda
x3<-cadata$Total_de_habitaciones
x4<-cadata$Total_de_dormitorios
x5<-cadata$Poblacion
x6<-cadata$Hogares
X1<-(x1-mean(x1))/sqrt(sum(x1^2)-(length(x1)*mean(x1)^2))
X2<-(x2-mean(x2))/sqrt(sum(x2^2)-(length(x2)*mean(x2)^2))
X3<-(x3-mean(x3))/sqrt(sum(x3^2)-(length(x3)*mean(x3)^2))
X4<-(x4-mean(x4))/sqrt(sum(x4^2)-(length(x4)*mean(x4)^2))
X5<-(x5-mean(x5))/sqrt(sum(x5^2)-(length(x5)*mean(x5)^2))
X6<-(x6-mean(x6))/sqrt(sum(x6^2)-(length(x6)*mean(x6)^2))
Xr<-cbind(X1,X2,X3,X4,X5,X6)
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
modeloreescalado<-lm(Y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
y<-cadata$Valor_mediano_de_la_casa
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
modeloreescalado<-lm(Y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
summary(modeloreescalado)
#X*t X en forma de correlacion es:
Rr<-t(Xr)%*%Xr
det(Rr)
#Estimación por PCR (Estandarizados):
eigen(Rr)
T<-eigen(Rr)$vectors
Z<-Xr%*%T
A<-t(Z)%*%Z
alfae<-solve(A)%*%t(Z)%*%Y
alfae<-solve(A)%*%t(Z)%*%Y
alfaec<-c(1,1,1,0,0,0)*alfae
Betaest<-T%*%alfae
mean(Y)
Betaest
summary(modeloreescalado)
#Estimación por PCR(escala original)
xbarra<-c(mean(x1),mean(x2),mean(x3),mean(x4),mean(x5),mean(x6))
Betaori<-c()
Betaori[1]=Betaest[1]*(sd(y)/sd(x1))
Betaori[2]=Betaest[2]*(sd(y)/sd(x2))
Betaori[3]=Betaest[3]*(sd(y)/sd(x3))
Betaori[4]=Betaest[4]*(sd(y)/sd(x4))
Betaori[5]=Betaest[5]*(sd(y)/sd(x5))
Betaori[6]=Betaest[6]*(sd(y)/sd(x6))
Beta0ori=mean(y)-(t(Betaori)%*%xbarra)
betas<-c(Beta0ori,Betaori)
sigma=(1/(500-7))*(t(y)%*%y-(t(betas)%*%t(X_1col)%*%y))
sqrt(sigma)
#varianza MCO (datos normales):
X_1col=cbind(1,X)
Beta0ori=mean(y)-(t(Betaori)%*%xbarra)
betas<-c(Beta0ori,Betaori)
sigma=(1/(500-7))*(t(y)%*%y-(t(betas)%*%t(X_1col)%*%y))
sqrt(sigma)
var_lm1=(1/(500-7))*((t(y)%*%y)-(t(Regresion$coefficients)%*%t(X_1col)%*%y))
summary(Regresion)$sigma^2
Vbetalm=solve(t(X_1col)%*%X_1col)*6724487923
Vbetalm
#varianza PCR con tres componentes (datos normales):
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
VbetaPCR=(T%*%solve(A)%*%t(T))*114199000000
t(c(coef(regresion_pcr, comps = 3)))
var_pcr
VbetaPCR
Vbetalm
#varianza MCO (datos estandarizados):
X_1cole=cbind(1,Xr)
var_lm1e=(1/(500-7))*((t(Y)%*%Y)-(t(modeloreescalado$coefficients)%*%t(X_1cole)%*%Y))
summary(modeloreescalado)$sigma^2
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
Betaestint<-c(0,Betaest)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.0009279279
var_pcre
Betaest<-T%*%alfaec
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
var_lm1e=(1/(500-7))*((t(Y)%*%Y)-(t(modeloreescalado$coefficients)%*%t(X_1cole)%*%Y))
var_lm1e
Betaestint<-c(0,Betaest)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001179825
VbetaPCRe
Vbetalme
#Tarea 4 Aplicada II
#Kevin García - Alejandro Vargas
library(MASS)
regCP <- function(X,y,tomar=NULL,sig=0.05) {
+
+ X.c <- scale(X,scale=FALSE) # datos centrados
+ y.c <- scale(y,scale=FALSE) # datos centrados
+ W <- scale(X.c,center=FALSE) /
+ sqrt(nrow(X)-1) # datos centrados y normalizados
+ WW <- crossprod(W) # matriz de momentos
+ factores.escala <- X.c[1,] / W[1,] # para restaurar los betas
+ # unidades originales
+ N <- nrow(X) ; p <- ncol(X) # Núm. observaciones y parámetros.
+ res <- eigen(WW)
+ V <- res$vectors # Vectores propios de W'W
+ landas <- res$values # Valores propios de W'W
+ U <- W %*% V # Componentes principales
+ gamas <- (1 / landas) * t(U) %*% y.c # Falla si algún landa ==
+
+ if (is.null(tomar)) { # Si no se ha indicado que
+ fit <- lsfit(X.c,y.c,intercept=FALSE) # CP tomar, se contrastan
+ SSE <- sum(fit$residuals^2) # todas al nivel de significación
+ qi <- (N-p) * (gamas*landas)^2 / SSE # sig
+ tomar <- (1:p)[sig > (1 - pf(qi,1,N-p))]
+ }
+ betasCPstar <- V[,tomar] %*% gamas[tomar] # Los betas obtenidos se corrigen
+ betasCP <- betasCPstar / factores.escala # con los factores de escala
+
+ m.X <- apply(X,2,mean) # Se calculan las medias de
+ m.Y <- mean(y) # X y de la y...
+ beta0 <- m.Y - sum(m.X*betasCP) # ... y con ellas, beta0.
+ #
+ betasCP <- c(beta0,betasCP)
+ names(betasCP) <- c("Intercept", # Rotulado coeficientes, para
+ dimnames(X)[[2]]) # mayor legibilidad.
+ return(list(betasCP=betasCP,landas=landas,
+ CP.usadas=tomar))
+ }
var_pcre
var_lm1e
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001179825
VbetaPCRe
Vbetalme
VbetaPCR=(T%*%solve(A)%*%t(T))*114199000000
VbetaPCR
Vbetalm=solve(t(X_1col)%*%X_1col)*6724487923
Vbetalm
summary(modeloreescalado)
summary(Regresion)
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
Vbetalme
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001179825
VbetaPCRe
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
Vbetalme
var_lm1e
var_pcre
betas
Betaest
SCRdP<-t(B1PCR)%*%t(Xd)%*%yd
B1PCR<-Betaest
SCRdP<-t(B1PCR)%*%t(Xd)%*%yd
#R2 de os dos modelos (PCR y MCO):
X1d<-(x1-mean(x1))
X2d<-(x2-mean(x2))
X3d<-(x3-mean(x3))
X4d<-(x4-mean(x4))
X5d<-(x5-mean(x5))
X6d<-(x6-mean(x6))
Xd<-cbind(X1d,X2d,X3d,X4d,X5d,X6d)
yd<-(y-mean(y))
xdtxd<-t(Xd)%*%Xd
xdtyd<-t(Xd)%*%yd
B1M<-solve(t(Xd)%*%Xd)%*%t(Xd)%*%yd
B1P<-Betaori
SCRdM<-t(B1M)%*%t(Xd)%*%yd
SCRdP<-t(B1P)%*%t(Xd)%*%yd
SCTd<-t(yd)%*%yd
R2M<-SCRdM/SCTd
R2P<-SCRdP/SCTd
SCRdPE<-t(B1PCR)%*%t(Xd)%*%yd
R2PCR<-SCRdPE/SCTd
R2PCR
Xr<-cbind(X1,X2,X3,X4,X5,X6)
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
t(Betaest)%*%t(Xr)%*%Y
(t(Betaest)%*%t(Xr)%*%Y)/(t(Y)%*%Y)
(t(Betaest)%*%t(Xr)%*%Y)/(t(Y)%*%Y)
t(Y)%*%Y
alfaec<-c(1,1,1,1,0,0)*alfae
Betaest<-T%*%alfaec
Betaest
Betaestint<-c(0,Betaest)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001179825
var_pcre
VbetaPCRe
var_lm1e
Vbetalme
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.0009552118
VbetaPCRe
Vbetalme
VbetaPCRe=(T%*%solve(A)%*%t(T))*var_pcre
alfaec<-c(1,1,1,0,0,0)*alfae
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.0009552118
VbetaPCRe
Betaestint<-c(0,Betaest)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
Betaest<-T%*%alfaec
Betaestint<-c(0,Betaest)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001179825
