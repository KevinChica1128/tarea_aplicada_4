xbarra
xbarra
p<-rt(N,N) #1
h<-function(x){dnorm(x,xbarra,sqrt(varianza))} #distribcion o funcion a posteriori
w<-h(p)/dbeta(p,1,1) #wi
E<-(1/sum(w))*(sum(w*p)) #Esperanza
E
w
h<-function(x){dnorm(xbarra,p,sqrt(varianza))} #distribcion o funcion a posteriori
w<-h(p)/dbeta(p,1,1) #wi
E<-(1/sum(w))*(sum(w*p)) #Esperanza
E
h
h(p)
N=1000
theta<-rnorm(1000)
xbarra=mean(theta)
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(xbarra,thetaimpor[i],sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
(1/sum(w1))*sum(w1*thetaimpor)
xbarra
promedio
#--------------------------------------------------------#
N=10000
theta<-rnorm(10000)
xbarra=mean(theta)
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(xbarra,thetaimpor[i],sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
promedio
thetaimpor
#--------------------------------------------------------#
N=10000
theta<-rnorm(10000)
xbarra=mean(theta)
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(xbarra,thetaimpor[i],sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
promedio
#--------------------------------------------------------#
N=10000
theta<-rnorm(10000)
xbarra=mean(theta)
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(thetaimpor[i],xbarra,sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
promedio
xbarra
theta<-rnorm(10000,10,1)
xbarra=mean(theta)
xbarra
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(thetaimpor[i],xbarra,sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
promedio
xbarra #Analitica
thetaimpor
#--------------------------------------------------------#
N=10000
theta<-rnorm(10000,10,1)
xbarra=mean(theta)
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(thetaimpor[i],xbarra,sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
theta<-rnorm(10000)
xbarra=mean(theta)
xbarra
varianza=1/N
thetaimpor<-rt(N,N)
t1=0
t2=0
w1=0
for (i in 1:N) {
w1[i]<-dnorm(thetaimpor[i],xbarra,sqrt(varianza))/dt(thetaimpor[i],N)
t2<-w1[i]+t2
t1<-thetaimpor[i]*w1[i]+t1
}
promedio=t1/t2 #Simulación
xbarra #Analitica
promedio
mean(theta)
N=10000
X<-rnorm(10000)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*p))
E
xbarra
E<-(1/sum(w))*(sum(w*thetai))
E
V<-(1/sum(w))*(sum(w*(thetai^2)))
V
varianza
xbarra
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
xbarra
varianza
E
V
X<-rnorm(N)
xbarra=mean(X)
xbarra
X<-rnorm(N)
xbarra=mean(X)
xbarra
varianza=1/N
varianza
set.seed(1)
X
xbarra
E
set.seed(1)
N=10000
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
xbarra
X<-rnorm(N)
set.seed(1)
X<-rnorm(N)
set.seed(1)
xbarra
N=10000
X<-rnorm(N)
xbarra=mean(X)
X<-rnorm(N)
xbarra=mean(X)
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
X<-rnorm(N,5,1)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
E
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
N=10000
X<-rnorm(N)
xbarra=mean(X)
N=10000
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
N=10000
X<-rnorm(N)
xbarra=mean(X)
X<-rnorm(N)
xbarra=mean(X)
varianza=1/N
thetai<-rt(N,N)
w<-dnorm(thetai,xbarra,sqrt(varianza))/dt(thetai,N)
E<-(1/sum(w))*(sum(w*thetai))
V<-(1/sum(w))*(sum(w*(thetai^2)))
xbarra
E
V
xbarra
E
V
#Ejemplo 2:
funcion<-funcion(x){(x^9)*((1-x)^3)}
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
tetai<-runif(N)
w1<-funcion(tetai)/dunif(tetai)
E1<-(1/sum(w1))*(sum(w1*tetai))  #Esperanza estimada
V1<-(1/sum(w1))*(sum(w1*(tetai^2))) #Varianza estimada
E1
V1
cadata <- read.csv("~/GitHub/tarea_aplicada_4/cadata.txt", sep="")
## El número aleatorio generado fue 15529 ##
# Eliminamos las filas que no necesitamos, nos quedamos con las filas desde la 15529 hasta la 16029 #
cadata<- cadata[-c(1:15528,16029:20640),]
#Ajuste del modelo completo:
Regresion<- lm(cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(Regresion)
#La matriz X* (reescalada) es:
x1<-cadata$Ingreso_mediano
x2<-cadata$Edad_mediana_de_la_vivienda
x3<-cadata$Total_de_habitaciones
x4<-cadata$Total_de_dormitorios
x5<-cadata$Poblacion
x6<-cadata$Hogares
X1<-(x1-mean(x1))/sqrt(sum(x1^2)-(length(x1)*mean(x1)^2))
X2<-(x2-mean(x2))/sqrt(sum(x2^2)-(length(x2)*mean(x2)^2))
X3<-(x3-mean(x3))/sqrt(sum(x3^2)-(length(x3)*mean(x3)^2))
X4<-(x4-mean(x4))/sqrt(sum(x4^2)-(length(x4)*mean(x4)^2))
X5<-(x5-mean(x5))/sqrt(sum(x5^2)-(length(x5)*mean(x5)^2))
X6<-(x6-mean(x6))/sqrt(sum(x6^2)-(length(x6)*mean(x6)^2))
Xr<-cbind(X1,X2,X3,X4,X5,X6)
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
#X*t X en forma de correlacion es:
Rr<-t(Xr)%*%Xr
#Estimación por PCR:
y<-cadata$Valor_mediano_de_la_casa
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
T<-eigen(Rr)$vectors
Z<-Xr%*%T
A<-t(Z)%*%Z
alfae<-solve(A)%*%t(Z)%*%y
Betaest<-T%*%alfae
Betaest
summary(Regresion)
alfae<-solve(A)%*%t(Z)%*%Y
Betaest<-T%*%alfae
Betaest
modeloreescalado$coefficients
modeloreescalado<-lm(Y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
summary(modeloreescalado)
Betaest<-T%*%alfae
Betaest
summary(modeloreescalado)
modeloreescalado<-lm(y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
alfae<-solve(A)%*%t(Z)%*%y
alfaec<-c(1,1,1,0,0,0)*alfae
Betaest<-T%*%alfae
Betaest
summary(Regresion)
modeloreescalado<-lm(Y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
summary(modeloreescalado)
Betaest<-T%*%alfae
alfae<-solve(A)%*%t(Z)%*%Y
Betaest<-T%*%alfae
Betaest
mean(x1)
sqrt(sum(x1^2)-(length(x1)*mean(x1)^2))
mean(x1)
summary(Regresion)
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
regresion_pcr=pcr(formula=cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+
cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares
)
library(pls)
regresion_pcr=pcr(formula=cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+
cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares
)
summary(regresion_pcr)
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
t(c(coef(regresion_pcr, comps = 3)))
regresion_pcr=pcr(formula=cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+
cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares
)
summary(regresion_pcr)
coef(regresion_pcr, comps = 1:6)
summary(Regresion)
Vbetalm=solve(t(X_1col)%*%X_1col)*6724487923
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
t(c(coef(regresion_pcr, comps = 3)))
t(X)
cadata <- read.csv("~/GitHub/tarea_aplicada_4/cadata.txt", sep="")
## El número aleatorio generado fue 15529 ##
# Eliminamos las filas que no necesitamos, nos quedamos con las filas desde la 15529 hasta la 16029 #
cadata<- cadata[-c(1:15528,16029:20640),]
#Ajuste del modelo completo:
Regresion<- lm(cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares)
summary(Regresion)
#Matriz de correlaciones:
X = cbind(Ingreso=cadata$Ingreso_mediano,Edad=cadata$Edad_mediana_de_la_vivienda,Habitaciones=cadata$Total_de_habitaciones,
Dormitorios=cadata$Total_de_dormitorios,Poblacion=cadata$Poblacion,Hogares=cadata$Hogares)
R = cor(X)
R
#Factor de inflación de varianza:
library('fmsb')
library(pls)
regresion_pcr=pcr(formula=cadata$Valor_mediano_de_la_casa ~ cadata$Ingreso_mediano+cadata$Edad_mediana_de_la_vivienda+
cadata$Total_de_habitaciones+cadata$Total_de_dormitorios+cadata$Poblacion+cadata$Hogares
)
summary(regresion_pcr)
coef(regresion_pcr, comps = 1:6)
## screeplot method
screeplot(regresion_pcr)
#Método (PCR) paso a paso:
#La matriz X es:
X
#La matriz X* (reescalada) es:
x1<-cadata$Ingreso_mediano
x2<-cadata$Edad_mediana_de_la_vivienda
x3<-cadata$Total_de_habitaciones
x4<-cadata$Total_de_dormitorios
x5<-cadata$Poblacion
x6<-cadata$Hogares
X1<-(x1-mean(x1))/sqrt(sum(x1^2)-(length(x1)*mean(x1)^2))
X2<-(x2-mean(x2))/sqrt(sum(x2^2)-(length(x2)*mean(x2)^2))
X3<-(x3-mean(x3))/sqrt(sum(x3^2)-(length(x3)*mean(x3)^2))
X4<-(x4-mean(x4))/sqrt(sum(x4^2)-(length(x4)*mean(x4)^2))
X5<-(x5-mean(x5))/sqrt(sum(x5^2)-(length(x5)*mean(x5)^2))
X6<-(x6-mean(x6))/sqrt(sum(x6^2)-(length(x6)*mean(x6)^2))
Xr<-cbind(X1,X2,X3,X4,X5,X6)
#Estimación por PCR:
y<-cadata$Valor_mediano_de_la_casa
Y<-(y-mean(y))/sqrt(sum(y^2)-(length(y)*mean(y)^2))
modeloreescalado<-lm(Y~X1+X2+X3+X4+X5+X6)
modeloreescalado$coefficients
summary(modeloreescalado)
#X*t X en forma de correlacion es:
Rr<-t(Xr)%*%Xr
det(Rr)
eigen(Rr)
T<-eigen(Rr)$vectors
Z<-Xr%*%T
A<-t(Z)%*%Z
alfae<-solve(A)%*%t(Z)%*%Y
alfaec<-c(1,1,1,0,0,0)*alfae
Betaest<-T%*%alfae
Betaest<-T%*%alfaec
Rr1<-t(X)%*%X
T1<-eigen(Rr1)$vectors
Z1<-X%*%T1
A1<-t(Z1)%*%Z1
alfae1<-solve(A1)%*%t(Z1)%*%y
Betaest1<-T1%*%alfae1
Betaest1
summary(Regresion)
#varianza MCO
X_1col=cbind(1,X)
var_lm1=(1/(500-7))*((t(y)%*%y)-(t(Regresion$coefficients)%*%t(X_1col)%*%y))
summary(Regresion)$sigma^2
var_lm1
Vbetalm=solve(t(X_1col)%*%X_1col)*6724487923
Vbetalm
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
var_pcr
VbetaPCR=(T%*%solve(A)%*%t(T))*var_pcr
var_pcr
var_pcr
VbetaPCR=(T%*%solve(A)%*%t(T))*114199000000
VbetaPCR
Vbetalm
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
integrate(funcion,0,1)
tetai<-runif(N)
#Muestreo por importancia Ejemplos:
#Ejemplo 1:
N=10000
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
tetai<-runif(N)
w1<-funcion(tetai)/dunif(tetai)
E1<-(1/sum(w1))*(sum(w1*tetai))  #Esperanza estimada
V1<-(1/sum(w1))*(sum(w1*(tetai^2))) #Varianza estimada
E1
#Ejemplo 2:
funcion<-function(x){x*(x^9)*((1-x)^3)}
integrate(funcion,0,1)
#Ejemplo 2:
funcion<-function(x){(x^9)*((1-x)^3)}
integrate(funcion,0,1)
E1
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X_1col)%*%y))
#varianza PCR con tres componentes:
var_pcr=(1/(500-7))*((t(y)%*%y)-(t(c(coef(regresion_pcr, comps = 3)))%*%t(X)%*%y))
Regresion$coefficients
t(c(coef(regresion_pcr, comps = 3))
coef(regresion_pcr, comps = 3)
t(c(coef(regresion_pcr, comps = 3)))
mean(Y)
summary(modeloreescalado)
mean(Y)
mean(y)
summary(Regresion)
#varianza MCO (datos estandarizados):
X_1cole=cbind(1,Xr)
var_lm1e=(1/(500-7))*((t(y)%*%y)-(t(Regresion$coefficients)%*%t(X_1col)%*%y))
var_lm1e
var_lm1e=(1/(500-7))*((t(Y)%*%Y)-(t(modeloreescalado$coefficients)%*%t(X_1cole)%*%Y))
var_lm1e
summary(modeloreescalado)$sigma^2
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
Vbetalme
Betaest<-T%*%alfaec
Betaest
#Varianza PCR con tres componentes (datos estandarizados):
var_pcr=(1/(500-7))*((t(Y)%*%Y)-(t(Betaest))%*%t(X_1cole)%*%Y))
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaest))%*%t(X_1cole)%*%Y))
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-6))*((t(Y)%*%Y)-((t(Betaest))%*%t(Xr)%*%Y))
var_pcre
y<-c(49,50.2,50.5,48.5,47.5,44.5,28,31.5,34.5,35,38,38.5,15,17,20.5,29.5)
mean(y)
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-6))*((t(Y)%*%Y)-((t(Betaest))%*%t(Xr)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001177437
VbetaPCRe
Vbetalme
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaest))%*%t(X_1cole)%*%Y))
Betaest
cbind(0,Betaest)
t(0,Betaest)
Betaestint<-c(0,Betaest)
Betaestint
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
Betaest<-T%*%alfae
Betaest
summary(modeloreescalado)
var_lm1e=(1/(500-7))*((t(Y)%*%Y)-(t(modeloreescalado$coefficients)%*%t(X_1cole)%*%Y))
summary(modeloreescalado)$sigma^2
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
Vbetalme
Betaestint<-c(0,Betaest)
Betaestint
#Varianza PCR con tres componentes (datos estandarizados):
var_pcre=(1/(500-7))*((t(Y)%*%Y)-((t(Betaestint))%*%t(X_1cole)%*%Y))
var_pcre
VbetaPCRe=(T%*%solve(A)%*%t(T))*0.001177437
VbetaPCRe
var_pcre
solve(A)*0.0009279279
VbetaPCRe=solve(T%*%solve(A)%*%t(T))*0.001177437
VbetaPCRe
VbetaPCRe=solve(T%*%solve(A)%*%t(T))*0.0009279279
VbetaPCRe
Vbetalme=solve(t(X_1cole)%*%X_1cole)*0.0009279279
Vbetalme
